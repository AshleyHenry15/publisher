set shell := ["bash", "-uc"]

export TARGET_SERVER := env_var_or_default("TARGET_SERVER", "http://localhost:3939")
# export API_KEY := env_var_or_default("PERFTEST_API_KEY", `echo -n admin | md5sum | cut -f1 -d" "`)

test target: 
  just start-connect cli-client {{target}} ui-client {{target}} test-cypress {{target}} stop

test-local target:
  just run-cli-local {{target}} ui-client-local {{target}} test-cypress-local {{target}} stop

test-ui-local target:
  just test-cypress-local {{target}}

build target:
  #!/usr/bin/env bash
  if [[ {{target}} =~ "all" ]]; then
    docker compose build
    else
    docker compose build {{target}}
  fi


start-connect:
  docker compose up -d connect
  # wait for Connect to start
  timeout 100 bash -c \
    'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' ${TARGET_SERVER}/__ping__)" != "200" ]]; \
        do sleep 5; \
        echo "waiting for connect..."; \
        done'
  

cli-client target:
  #!/usr/bin/env bash
  if [[ {{target}} =~ "linux" ]]; then
    docker compose run \
    -e BATS_SUPPORT_LIB="/libs/bats-support/load" \
    -e BATS_ASSERT_LIB="/libs/bats-assert/load" \
    -e BINARY_PATH=/publishing-client/bin/{{target}}/connect-client \
    --rm --remove-orphans {{target}} just _test-cli-client {{target}}
  elif [[ {{target}} =~ "windows" ]]; then
    just _test-cli-client windows-amd64
  elif [[ {{target}} =~ "macos" || {{target}} =~ "darwin" ]]; then
    just _test-cli-client darwin-amd64
  fi

# TODO see if target is needed
_test-cli-client target:
  bats --tap -T -r ./bats/


####################

# TODO do we need this?
test-cli target:
  just cli-client {{target}}

ui-client target:
  #!/usr/bin/env bash
  if [[ {{target}} =~ "linux" ]]; then
    BINARY_PATH=/publishing-client/bin/{{target}}/connect-client \
    docker compose up -d \
    {{target}}-client-ui
  elif [[ {{target}} =~ "windows" ]]; then
   set shell := ["powershell.exe", "-c"] \
   Start-Process -FilePath "$GITHUB_WORKSPACE\\bin\\artifact\\windows-amd64\\connect-client.exe" -ArgumentList "account-ui", "--listen=localhost:9000" -WindowStyle Hidden -RedirectStandardOutput ./win-out.txt
  elif [[ {{target}} =~ "macos" || {{target}} =~ "darwin" ]]; then
    $BINARY_PATH account-ui --listen=localhost:9000 &
  fi

# test-cypress target:
#   #!/usr/bin/env bash
#   just ui-client {{target}}
#   sleep 5
#   if [[ {{target}} =~ "linux" ]]; then
#     CYPRESS_BASE_URL=$(docker logs --tail 1 {{target}}-client-ui | grep '^http.*#.*') \
#     just cypress {{target}}
#   elif [[ {{target}} =~ "windows" ]]; then
#     set shell := ["powershell.exe", "-c"] \
#     $CYPRESS_BASE_URL=grep '^http.*#.[a-z]*' .\win-out.txt
#     just cypress {{target}}
#   elif [[ {{target}} =~ "macos" || {{target}} =~ "darwin" ]]; then
#     echo "GREP!"
#     sleep 10
#     echo "$(egrep '^http.*#.[a-z]*' screenlog.0)"
#     CYPRESS_BASE_URL=$(egrep '^http.*#.[a-z]*' screenlog.0 | sed s#127\.0\.0\.1#host.docker.internal#) \
#     just cypress {{target}}
#   fi

test-cypress-local target:
  #!/usr/bin/env bash
  just ui-client-local {{target}}
  sleep 20
  if [[ {{target}} =~ "linux" ]]; then
    CYPRESS_BASE_URL=$(docker logs --tail 2 {{target}}-client-ui | grep '^http.*#.*') \
    just ../web/test-e2e
  elif [[ {{target}} =~ "windows" ]]; then
    $CYPRESS_BASE_URL=grep '^http.*#.[a-z]*' .\win-out.txt \
    just ../web/test-e2e
  elif [[ {{target}} =~ "darwin" ]]; then
    echo "GREP!"
    echo "$(egrep '\?token=.*.accounts' screenlog.0)"
    CYPRESS_BASE_URL=$(egrep '\?token=.*.accounts' screenlog.0 | sed s#127\.0\.0\.1#host.docker.internal#) \
    just ../web/test-e2e
  fi

ui-client-local target:
  #!/usr/bin/env bash
  if [[ {{target}} =~ "linux" ]]; then
    BINARY_PATH=../bin/{{target}}/connect-client \
    docker compose up -d \
    {{target}}-client-ui
  elif [[ {{target}} =~ "windows" ]]; then
   set shell := ["powershell.exe", "-c"] \
   BINARY_PATH=../bin/{{target}}/connect-client.exe \
   Start-Process -FilePath ..\bin\artifact\windows-amd64\connect-client.exe -ArgumentList "account-ui", "--listen=localhost:9000" -WindowStyle Hidden -RedirectStandardOutput ./win-out.txt
  elif [[ {{target}} =~ "darwin" ]]; then
    BINARY_PATH=../bin/{{target}}/connect-client \
    screen -S client -dmL ../bin/{{target}}/connect-client account-ui --listen=localhost:9000
  fi
# _run-ui-client target:
#   $BINARY_PATH account-ui --listen=localhost:9000

cypress target:
  #!/usr/bin/env bash
  CYPRESS_BASE_URL=$CYPRESS_BASE_URL \
    just ../web/ci-e2e

run-cli-local target:
  #!/usr/bin/env bash
  just start-connect && \
  just bats-install && \
  BATS_SUPPORT_LIB={{invocation_directory()}}/libs/bats-support/load \
  BATS_ASSERT_LIB={{invocation_directory()}}/libs/bats-assert/load \
  BINARY_PATH=../bin/{{target}}/connect-client \
  ./libs/bats-core/bin/bats --tap -T -r ./bats/

bats-install:
  #!/usr/bin/env bash
  if [[ ! -d ./libs ]]; then
    git clone --depth=1 https://github.com/bats-core/bats-core.git ./libs/bats-core && \
    ./libs/bats-core/install.sh ./libs/bats-core/installation && \
    git clone --depth=1 https://github.com/ztombol/bats-support.git ./libs/bats-support && \
    git clone --depth=1 https://github.com/ztombol/bats-assert.git ./libs/bats-assert
  fi

run-cypress:
  docker compose up --exit-code-from cypress

bash target:
  docker compose run --rm {{target}} /bin/bash

stop: 
  docker compose kill
  rm -rf screenlog.0
#   screen -S client -p 0 -X quit