{
  // URL to the schema definition, which we should make public.
  "$schema": "./posit-publishing-schema-v3.json",
  "type": "quarto-static",
  "entrypoint": "report.qmd",

  // id can be used to specify a target deployment to update.
  // Currently, it can only be used for updates once the content
  // has been deployed, because the server assigns the GUIDs.
  // Allowing the client to generate GUIDs and save them here
  // would be helpful, since the metadata could be correct before
  // the first deployment (an enabler for git workflows).
  // Name can be used as an alternative to ID.
  // On Connect, (owner, name) pairs must be unique
  // unless name is empty.

  // Note that currently, you can't create a deployment
  // by uploading a bundle, because the upload endpoint
  // is under the content-id (/__api__/v1/content/{GUID}/upload).
  // If we want that workflow, we will need to provide a global
  // bundle upload endpoint (/__api__/v1/bundles/upload) that
  // always creates a new content item.
  "id": "de2e7bdb-b085-401e-a65c-443e40009749",
  "name": "regional-quarterly-sales-report",

  // These metadata fields are purely for human consumption.
  "title": "Regional Quarterly Sales Report",
  "description": "This is the quarterly sales report, broken down by region.",
  "author": {
    "name": "Michael Marchetti",
    "email": "mike@posit.co",
    "username": "mmarchetti",
    "organization": "Posit, PBC"
  },
  // Arbitrary string tags. On Connect, only admins can create tags,
  // and tags can be nested (e.g. "sales,reports,quarterly" is a
  // single tag 3 levels deep in the tag tree). The example below
  // is 3 separate top level tags.
  "tags": [
    "sales",
    "quarterly",
    "regional"
  ],
  // List of (relative) file paths. If constructing a bundle to upload,
  // these files must be included. For git deployments, the server
  // will expect (required) that these files be present in the repo.
  // Unlike manifest v1, there are no checksums, since those require
  // updating this file whenever other files change, and we'd prefer
  // to write this once and commit it.
  "files": [
    "report.qmd",
    "_quarto.yml",
    "model.py",
    "requirements.txt",
    "weights/*.hdf5"
  ],
  "dependencies": {
    "python": {
      "version": "3.11.3",
      "package_file": "requirements.txt",
      "package_manager": "pip"
    },
    "r": {
      "version": "4.3.1",
      "package_file": "renv.lock",
      "package_manager": "renv"
    },
    "quarto": {
      "version": "1.4"
    }
  },
  "environment": {
      "API_URL": "https://example.com/api",
      // secret value, will be pulled from the environment when deploying through CLI,
      // must be set at the server if deploying through git.
      "API_KEY": null
  },
  "schedule": {
    // Only valid for reports, not for apps.
    // iCalendar spec: https://icalendar.org/iCalendar-RFC-5545/3-8-5-3-recurrence-rule.html
    "start": "2023-10-25T08:00:00Z",
    "recurrence": "FREQ=MONTHLY;INTERVAL=3"
  },
  "connect": {
    // These settings are Connect-specific and will be ignored by other servers.
    "access": {
      "type": "logged-in",
      "run_as": "rstudio-connect",
      "run_as_current_user": false
    },
    "runtime": {
      // Might some of these apply beyond Connect? For example, init_timeout
      // tells the server how long this app might take to start up.
      "connection_timeout": 5,
      "read_timeout": 30,
      "init_timeout": 60,
      "idle_timeout": 120,
      "max_processes": 5,
      "min_processes": 1,
      "max_conns_per_process": 50,
      "load_factor": 0.5
    },
    "kubernetes": {
      // Will Posit Cloud Connect be containerized? If so, will it support
      // image_name, cpu_limit, memory_limit, and/or gpu settings?
      // (note k8s GPU settings are different from the docker ones)
      "amd_gpu_limit": 0,
      "cpu_limit": 1,
      "cpu_request": 0.5,
      "image_name": "posit/connect-runtime-python3.11-r4.3",
      "memory_limit": "100000000",
      "memory_request": "20000000",
      "nvidia_gpu_limit": 0,
      "service_account_name": "posit-connect-content",
      "r_environment_management": true,
      "py_environment_management": true
    }
  }
}
