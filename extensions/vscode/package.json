{
  "name": "publisher",
  "publisher": "posit",
  "displayName": "Posit Publisher",
  "description": "Publish and share your Python and R content on Posit Connect",
  "version": "0.0.0",
  "icon": "assets/img/color/posit-publisher.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/rstudio/publishing-client/tree/main/extensions/vscode"
  },
  "engines": {
    "vscode": "^1.87.0"
  },
  "categories": [
    "Data Science",
    "Machine Learning",
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "posit.publisher.toplevel.refresh",
        "title": "Refresh Publisher",
        "icon": "$(refresh)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.configurations.add",
        "title": "New Configuration",
        "icon": "$(add)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.configurations.clone",
        "title": "Clone",
        "icon": "$(files)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.configurations.edit",
        "title": "Edit",
        "icon": "$(edit)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.configurations.rename",
        "title": "Rename",
        "icon": "$(symbol-key)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.configurations.delete",
        "title": "Delete",
        "icon": "$(trash)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.deployments.edit",
        "title": "Edit",
        "icon": "$(edit)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.deployments.forget",
        "title": "Forget this deployment locally",
        "icon": "$(close-all)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.deployments.visit",
        "title": "View this deployment in Connect",
        "icon": "$(link-external)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.deployments.add",
        "title": "New Deployment",
        "icon": "$(add)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.deployments.deploy",
        "title": "Deploy",
        "icon": {
          "light": "./assets/img/light/posit-publisher.svg",
          "dark": "./assets/img/dark/posit-publisher.svg"
        },
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.files.editPositIgnore",
        "title": "Create/Edit Posit Ignore file (.positignore)",
        "icon": "$(gear)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.files.addExclusion",
        "title": "Exclude this file",
        "icon": "$(exclude)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.requirements.edit",
        "title": "Edit Requirements File",
        "icon": "$(edit)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.requirements.scan",
        "title": "Scan Requirements",
        "icon": "$(eye)",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.helpAndFeedback.gettingStarted",
        "title": "Open Getting Started Documentation",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.helpAndFeedback.openFeedback",
        "title": "Provide Feedback",
        "category": "Posit Publisher"
      },
      {
        "command": "posit.publisher.logs.visit",
        "title": "View this deployment in Connect",
        "icon": "$(link-external)",
        "category": "Posit Publisher"
      }
    ],
    "configuration": {
      "title": "Posit",
      "properties": {
        "posit.publisher.executable.path": {
          "description": "A path to the Posit Publisher executable. By default, the extension looks for `publisher` in the `PATH`",
          "type": "string"
        }
      }
    },
    "menus": {
      "view/title": [
        {
          "command": "posit.publisher.toplevel.refresh",
          "when": "view == posit.publisher.toplevel",
          "group": "navigation@1"
        }
      ],
      "view/item/context": [
        {
          "command": "posit.publisher.configurations.add",
          "when": "view == posit.publisher.toplevel && viewItem == posit.publisher.toplevel.configurations",
          "group": "inline@1"
        },
        {
          "command": "posit.publisher.deployments.add",
          "when": "view == posit.publisher.toplevel && viewItem == posit.publisher.toplevel.deployments",
          "group": "inline@1"
        },
        {
          "command": "posit.publisher.files.editPositIgnore",
          "when": "view == posit.publisher.toplevel && viewItem == posit.publisher.toplevel.files",
          "group": "inline@1"
        },
        {
          "command": "posit.publisher.requirements.edit",
          "when": "view == posit.publisher.toplevel && viewItem == posit.publisher.toplevel.requirements",
          "group": "inline@1"
        },
        {
          "command": "posit.publisher.requirements.scan",
          "when": "view == posit.publisher.toplevel && viewItem == posit.publisher.toplevel.requirements",
          "group": "inline@2"
        },
        {
          "command": "posit.publisher.configurations.clone",
          "when": "view == posit.publisher.toplevel && viewItem == posit.publisher.configurations.tree.item"
        },
        {
          "command": "posit.publisher.configurations.rename",
          "when": "view == posit.publisher.toplevel && viewItem == posit.publisher.configurations.tree.item"
        },
        {
          "command": "posit.publisher.configurations.delete",
          "when": "view == posit.publisher.toplevel && viewItem == posit.publisher.configurations.tree.item"
        },
        {
          "command": "posit.publisher.deployments.deploy",
          "when": "view == posit.publisher.toplevel && (viewItem == posit.publisher.deployments.tree.item.deployment || viewItem == posit.publisher.deployments.tree.item.predeployment)",
          "group": "inline"
        },
        {
          "command": "posit.publisher.deployments.forget",
          "when": "view == posit.publisher.toplevel && (viewItem == posit.publisher.deployments.tree.item.deployment || viewItem == posit.publisher.deployments.tree.item.predeployment || viewItem == posit.publisher.deployments.tree.item.deploymentError)"
        },
        {
          "command": "posit.publisher.deployments.visit",
          "when": "view == posit.publisher.toplevel && viewItem == posit.publisher.deployments.tree.item.deployment",
          "group": "inline"
        },
        {
          "command": "posit.publisher.files.addExclusion",
          "when": "view == posit.publisher.toplevel && viewItem == posit.publisher.files.isIncludedFile",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "posit.publisher.toplevel.refresh",
          "when": "!posit.publish.missing && posit.publish.state == 'initialized'"
        },
        {
          "command": "posit.publisher.configurations.add",
          "when": "!posit.publish.missing && posit.publish.state == 'initialized'"
        },
        {
          "command": "posit.publisher.configurations.clone",
          "when": "false"
        },
        {
          "command": "posit.publisher.configurations.edit",
          "when": "false"
        },
        {
          "command": "posit.publisher.configurations.rename",
          "when": "false"
        },
        {
          "command": "posit.publisher.configurations.delete",
          "when": "false"
        },
        {
          "command": "posit.publisher.deployments.edit",
          "when": "false"
        },
        {
          "command": "posit.publisher.deployments.forget",
          "when": "false"
        },
        {
          "command": "posit.publisher.deployments.add",
          "when": "!posit.publish.missing && posit.publish.state == 'initialized'"
        },
        {
          "command": "posit.publisher.deployments.deploy",
          "when": "false"
        },
        {
          "command": "posit.publisher.files.editPositIgnore",
          "when": "!posit.publish.missing && posit.publish.state == 'initialized'"
        },
        {
          "command": "posit.publisher.files.addExclusion",
          "when": "false"
        },
        {
          "command": "posit.publisher.requirements.scan",
          "when": "!posit.publish.missing && posit.publish.state == 'initialized'"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "posit-publisher",
          "title": "Posit Publisher",
          "icon": "assets/img/color/posit-publisher.svg"
        }
      ],
      "panel": [
        {
          "id": "posit-publisher-logs",
          "title": "Posit Publisher Logs",
          "icon": "$(output)"
        }
      ]
    },
    "views": {
      "posit-publisher": [
        {
          "id": "posit.publisher.toplevel",
          "name": "Publish",
          "contextualTitle": "Publisher",
          "when": "workbenchState == folder"
        }
      ],
      "posit-publisher-logs": [
        {
          "id": "posit.publisher.logs",
          "name": "Logs",
          "contextualTitle": "Logs",
          "icon": "$(output)",
          "when": "workbenchState == folder && !posit.publish.missing && posit.publish.state == 'initialized'"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "posit.publisher.project",
        "contents": "In order to deploy using Posit Publisher, you can open a folder initialized as a Posit project or initialize a new project.\n[Open Folder](command:vscode.openFolder)",
        "when": "workbenchState == empty"
      },
      {
        "view": "posit.publisher.project",
        "contents": "Posit Publisher currently only supports single folder workspaces, open a folder initialized as a Posit project or initialize a new project.\n[Open Folder](command:vscode.openFolder)",
        "when": "workbenchState == workspace"
      },
      {
        "view": "posit.publisher.project",
        "contents": "Scanning folder for a Posit project...",
        "when": "workbenchState == folder && posit.publish.state == 'uninitialized'"
      },
      {
        "view": "posit.publisher.project",
        "contents": "Before deploying using Posit Publisher, you need to initialize your project by creating a deployment configuration.\n[Initialize Project](command:posit.publisher.configurations.add)",
        "when": "workbenchState == folder && posit.publish.missing && posit.publish.state == 'initialized'"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "lint": "eslint src --ext ts",
    "format": "prettier . --write",
    "check-format": "prettier . --check",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/eventsource": "^1.1.15",
    "@types/mocha": "^10.0.2",
    "@types/mutexify": "^1.2.3",
    "@types/node": "18.x",
    "@types/retry": "^0.12.5",
    "@types/vscode": "^1.87.0",
    "@types/wait-on": "^5.3.3",
    "@typescript-eslint/eslint-plugin": "^6.7.3",
    "@typescript-eslint/parser": "^6.7.3",
    "@vscode/test-electron": "^2.3.8",
    "eslint": "^8.50.0",
    "eslint-config-prettier": "^9.1.0",
    "glob": "^10.3.3",
    "mocha": "^10.2.0",
    "prettier": "3.2.5",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "axios": "^1.6.0",
    "eventsource": "^2.0.2",
    "get-port": "5.1.1",
    "mutexify": "^1.4.0",
    "retry": "^0.13.1"
  }
}
