name: Pull Request
on:
  pull_request
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        run: just test
      - name: Build
        run: just build
      - uses: actions/upload-artifact@v3
        with:
          path: bin/
  test-macos-client:
    needs: build
    strategy:
      matrix:
        CLIENT: 
          - macos-latest
    runs-on: ${{ matrix.CLIENT }}
    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
      - uses: actions/download-artifact@v3
        with:
          path: bin/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLIENT: "${{ matrix.CLIENT }}"

      - name: Run macos
        env:
          CLIENT: "${{ matrix.CLIENT }}"
          BATS_SUPPORT_LIB: load ${{ github.workspace }}/libs/bats-support/load
          BATS_ASSERT_LIB: load ${{ github.workspace }}/libs/bats-assert/load
          BINARY_PATH: ${{ github.workspace }}/bin/darwin-amd64/connect-client
        run: |
          cp -r bin/artifact/* bin/ && chmod +x bin/*/*
          git clone --depth=1 https://github.com/bats-core/bats-core.git ${{ github.workspace }}/libs/bats-core
          cd ${{ github.workspace }}/libs/bats-core
          ./install.sh ${{ github.workspace }}/libs/bats-core/installation
          git clone --depth=1 https://github.com/ztombol/bats-support.git ${{ github.workspace }}/libs/bats-support
          git clone --depth=1 https://github.com/ztombol/bats-assert.git ${{ github.workspace }}/libs/bats-assert
          PATH="$PATH:${{ github.workspace }}/libs/bats-core/bin"
          cd ${{ github.workspace }}/test
          just run-client ${CLIENT}

  test-windows-client:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
      - uses: actions/download-artifact@v3
        with:
          path: bin/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: mxschmitt/action-tmate@v3
        with: 
          detached: true
          limit-access-to-actor: true

      - name: Run Windows Tests
        env:
          CLIENT: windows-latest
          BATS_SUPPORT_LIB: load $env:GITHUB_WORKSPACE\libs\bats-support\load
          BATS_ASSERT_LIB: load $env:GITHUB_WORKSPACE\libs\bats-assert\load
          BINARY_PATH: $env:GITHUB_WORKSPACE/bin/windows-amd64/connect-client
        run: |
          cp -r bin/artifact/* bin/ && chmod +x bin/*/*
          git clone --depth=1 https://github.com/bats-core/bats-core.git $env:GITHUB_WORKSPACE/libs/bats-core
          cd $env:GITHUB_WORKSPACE/libs/bats-core
          ./install.sh $env:GITHUB_WORKSPACE/libs/bats-core/installation
          git clone --depth=1 https://github.com/ztombol/bats-support.git $env:GITHUB_WORKSPACE/libs/bats-support
          git clone --depth=1 https://github.com/ztombol/bats-assert.git $env:GITHUB_WORKSPACE/libs/bats-assert
          echo $env:PATH
          echo $env:GITHUB_WORKSPACE\libs\bats-core\bin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo $env:PATH
          cd $env:GITHUB_WORKSPACE/test
          echo $env:CLIENT
          just run-client $env:CLIENT
                  

  test-linux-clients:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        CLIENT:
          - linux-amd64
          - linux-arm64
    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
      - uses: actions/download-artifact@v3
        with:
          path: bin/
      # these are required to run docker on amd64 and arm64 platforms
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Linux Tests
        env:
          CLIENT: "${{ matrix.CLIENT }}"
        run: |
          cp -r bin/artifact/* bin/ && chmod +x bin/*/*
          just test/build ${CLIENT}
          just test/run-client ${CLIENT}
