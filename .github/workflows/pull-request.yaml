name: Pull Request
on:
  pull_request

# A note on debugging a github step:
#   You can ssh into the github action environment and poke around by using
#   https://github.com/marketplace/actions/debugging-with-tmate
#   Use `limit-access-to-actor: true` so only you can ssh into the environment!
#  
#   For example, to debug a failure, append this to the jobs list within the failing step
#   - name: Setup tmate session
#     if: ${{ failure() }}
#     uses: mxschmitt/action-tmate@v3
#     with:
#       limit-access-to-actor: true
#

jobs:
  pr-code-validation:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: build docker image
        run: just image
      - name: install dependencies
        run: just install
      - name: lint the source files
        run: just lint
      - name: build the CLI client and Web UX
        run: just build
      - name: lint the build dependent files
        run: just post-build-lint
      - name: run all tests
        run: just test
      - uses: actions/upload-artifact@v3
        with:
          path: bin/

  cypress-install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress install
        uses: cypress-io/github-action@v5
        with:
          runTests: false
          build: npm run build

      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
            name: build
            if-no-file-found: error
            path: build

  test-windows-client:
    runs-on: windows-latest
    needs: [pr-code-validation, cypress-install]
    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
      - uses: actions/download-artifact@v3
        with:
          path: bin/
      - name: Download the build folder
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Windows Tests
        env:
          CLIENT: windows-latest
          # bats reads the load libraries from relative path only in Windows
          BATS_SUPPORT_LIB: ..\..\libs\bats-support\load.bash
          BATS_ASSERT_LIB: ..\..\libs\bats-assert\load
        shell: powershell
        run: |
          cp -r bin\artifact\* bin\
          chmod +x bin\*\*
          just test/bats-install
          $env:Path += ";$env:GITHUB_WORKSPACE\test\libs\bats-core\bin"
          $env:BINARY_PATH = "$env:GITHUB_WORKSPACE\bin\windows-amd64\connect-client"
          cd $env:GITHUB_WORKSPACE\test
          just cli-client $env:CLIENT
          Start-Process -FilePath "$env:GITHUB_WORKSPACE\bin\artifact\windows-amd64\connect-client.exe" -ArgumentList "account-ui", "--listen=localhost:9999" -WindowStyle Hidden -RedirectStandardOutput ./win-out.txt
          #run cypress directly from windows vm in GH Actions
          $env:CYPRESS_BASE_URL=grep '^http.*#.[a-z]*' .\win-out.txt
      - name: Run Cypress Tests (windows)
        uses: cypress-io/github-action@v5
        with:
          start: npm start
          browser: chrome

  test-macos-client:
    needs: [pr-code-validation, cypress-install]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
      - uses: actions/download-artifact@v3
        with:
          path: bin/

      - name: Run macos
        env:
          CLIENT: macos-latest
          BATS_SUPPORT_LIB: ${{ github.workspace }}/test/libs/bats-support/load
          BATS_ASSERT_LIB: ${{ github.workspace }}/test/libs/bats-assert/load
          BINARY_PATH: ${{ github.workspace }}/bin/darwin-amd64/connect-client
        run: |
          cp -r bin/artifact/* bin/ && chmod +x bin/*/*
          just test/bats-install
          PATH="$PATH:${{ github.workspace }}/test/libs/bats-core/bin"
          cd ${{ github.workspace }}/test
          just cli-client ${CLIENT}
          just ui-client ${CLIENT}
          # just test-cypress ${CLIENT}
      - name: Run Cypress Tests (windows)
        uses: cypress-io/github-action@v5
        with:
          start: npm start
          browser: chrome

      # Videos are captured whether the suite fails or passes
      - name: Save videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: test/cypress/videos
          if-no-files-found: ignore

      # Screenshots are only captured on failure
      - name: Save screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: test/cypress/screenshots
          if-no-files-found: ignore


  test-linux-clients:
    runs-on: ubuntu-latest
    needs: [pr-code-validation, cypress-install]
    strategy:
      matrix:
        CLIENT:
          - linux-amd64
          - linux-arm64
    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
      - uses: actions/download-artifact@v3
        with:
          path: bin/
      # these are required to run docker on amd64 and arm64 platforms
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Linux Tests
        env:
          CLIENT: "${{ matrix.CLIENT }}"
        run: |
          cp -r bin/artifact/* bin/ && chmod +x bin/*/*
          cd ${{ github.workspace }}/test
          just build ${CLIENT}
          just cli-client ${CLIENT}
          just ui-client ${CLIENT}
          # just test-cypress ${CLIENT}
      - name: Run Cypress Tests (windows)
        uses: cypress-io/github-action@v5
        with:
          start: npm start
          browser: chrome
